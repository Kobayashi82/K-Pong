
services:

# ----------------- WEB SERVER ----------------- #

  # Nginx
  nginx:
    container_name: nginx                             # Nombre del contenedor
    build:
      context: ./nginx                                # Ubicacion del Dockerfile de nginx
      dockerfile: Dockerfile
    volumes:
      - ./frontend:/usr/share/nginx/html              # Monta la carpeta frontend en Nginx (los cambios son instantaneos)
      - nginx-logs:/var/log/nginx
    ports:
      - "80:80"                                       # Puerto de Nginx para HTTP
      - "443:443"                                     # Puerto de Nginx para HTTPS
    networks:
      - pong-net                                      # Red que conecta todos los contenedores
    depends_on:
      - service1                                      # Dependencia de service1

# ------------------ DATABASE ------------------ #

  # PostgreSQL
  postgre:
    container_name: postgre                           # Nombre del contenedor
    image: postgres:13
    env_file: .env                                    # Archivo con las variables de entorno
    volumes:
      - db_data:/var/lib/postgresql/data              # Volumen donde se guardan los archivos de la base de datos
    ports:
      - "5432:5432"                                   # Puerto de PostgreSQL
    networks:
      - pong-net                                      # Red que conecta todos los contenedores

# ----------------- MONITORING ----------------- #

  # Prometheus
  prometheus:
      container_name: prometheus                      # Nombre del contenedor
      build:
        context: ./prometheus                         # Ubicacion del Dockerfile de prometheus
        dockerfile: Dockerfile
      ports:
        - "9090:9090"                                 # Puerto de Prometheus
      networks:
        - pong-net                                    # Red que conecta todos los contenedores

  # Grafana
  grafana:
    container_name: grafana                           # Nombre del contenedor
    image: grafana/grafana
    environment:
      - GF_SERVER_ROOT_URL=https://localhost/grafana/
    ports:
      - "3000:3000"                                   # Puerto de Grafana
    networks:
      - pong-net                                      # Red que conecta todos los contenedores

# -------------------- LOGS -------------------- #

  # log-reader:
  #   container_name: log-reader                        # Nombre del contenedor
  #   image: alpine
  #   volumes:
  #     - nginx-logs:/var/log/nginx
  #   entrypoint: /bin/sh -c "tail -F /var/log/nginx/access.log /var/log/nginx/error.log | nc logstash 5044"
  #   networks:
  #     - pong-net                                      # Red que conecta todos los contenedores

  # ElasticSearch
  elasticsearch:
    container_name: elasticsearch                     # Nombre del contenedor
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.4
    environment:
      - discovery.type=single-node
    volumes:
      - log_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"                                   # Puerto de ElasticSearch
    networks:
      - pong-net                                      # Red que conecta todos los contenedores

  # LogStash
  logstash:
    container_name: logstash                          # Nombre del contenedor
    build:
      context: ./logstash                             # Ubicacion del Dockerfile de prometheus
      dockerfile: Dockerfile
    ports:
      - "5044:5044"                                   # Puerto de LogStash
    networks:
      - pong-net                                      # Red que conecta todos los contenedores

  # Kibana
  kibana:
    container_name: kibana                            # Nombre del contenedor
    image: docker.elastic.co/kibana/kibana:7.17.4
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - SERVER_BASEPATH=/kibana                       # Agregar base path para Kibana
      # - SERVER_REWRITEBASEPATH=true                   # Reescribir URLs para ajustarse al base path
    ports:
      - "5601:5601"                                   # Puerto de Kibana
    networks:
      - pong-net                                      # Red que conecta todos los contenedores

# --------------- MICRO-SERVICES --------------- #

  # Service1
  service1:
    container_name: service1                          # Nombre del contenedor
    env_file: .env                                    # Archivo con las variables de entorno
    build:
      context: ./backend/service1                     # Ubicacion del Dockerfile del microservicio
      dockerfile: Dockerfile
    volumes:
      - ./backend/service1:/app                       # Monta la carpeta del microservicio (los cambios son instantaneos)
    ports:
      - "8001:8000"                                   # Puerto de "gunicorn" para las API Request
      - "9001:9000"                                   # Puerto de "daphne" para los WebSockets
    networks:
      - pong-net                                      # Red que conecta todos los contenedores
    depends_on:
      - prometheus                                    # Dependencia de prometheus
      - grafana                                       # Dependencia de grafana
      - postgre                                       # Dependencia de la base de datos

# ------------------ VOLUMES ------------------- #

volumes:
  db_data:                                            # Volumen donde se guardan los archivos de la base de datos
  log_data:                                           # Volumen donde se guardan los logs
  nginx-logs:

# ------------------ NETWORK ------------------- #

networks:
  pong-net:                                           # Red que conecta todos los contenedores
