input {
    tcp {
        port => 5044
        codec => plain
    }
    udp {
        port => 5044
        codec => plain
    }
}

filter {
    # Filtra los logs de nginx
    if [message] =~ /nginx/ {
        mutate {
            add_field => { "source" => "nginx" }
        }
        # Usa un filtro grok ajustado para manejar este formato especÃ­fico de log de nginx
		grok {
			match => { "message" => "<%{INT:syslog5424_pri}>%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_hostname} nginx: %{IPORHOST:remote_addr} - - \[%{HTTPDATE:timestamp}\] \"%{WORD:method} %{URIPATHPARAM:request} HTTP/%{NUMBER:http_version}\" %{NUMBER:status} %{NUMBER:body_bytes_sent} \"%{DATA:http_referer}\" \"%{DATA:http_user_agent}\"" }
		}

        date {
            match => [ "timestamp", "dd/MMM/yyyy:HH:mm:ss Z" ]
            target => "@timestamp"
        }
    } else {
        mutate {
            add_field => { "source" => "other" }
        }
    }
}


output {
    stdout { codec => rubydebug }
    if [source] == "nginx" {
        elasticsearch {
            hosts => ["http://elasticsearch:9200"]
            index => "nginx_%{+YYYY.MM.dd}"
        }
    } else {
        elasticsearch {
            hosts => ["http://elasticsearch:9200"]
            index => "other_%{+YYYY.MM.dd}"
        }
    }
}

